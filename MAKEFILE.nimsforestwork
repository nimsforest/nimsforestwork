# =============================================================================
# NimsforestWork - Work Management System
# =============================================================================
# 
# This is a standalone Makefile for the nimsforestwork package.
# It can be included in any project's main Makefile using:
#   -include pkg/nimsforestwork/MAKEFILE.nimsforestwork
#
# Usage:
#   make nimsforestwork-addtomainmakefile PROJECTDIR=/path/to/project
#   make nimsforestwork-hello
#   make nimsforestwork-init  
#   make nimsforestwork-lint
#

.PHONY: nimsforestwork-hello nimsforestwork-init nimsforestwork-lint nimsforestwork-newissue nimsforestwork-addtomainmakefile nimsforestwork-removefromainmakefile nimsforestwork-setup-workspace

# Check system compatibility for work management
nimsforestwork-hello:
	@echo "🌲 NimsforestWork System Compatibility Check"
	@echo "============================================="
	@echo ""
	@echo "🔍 Checking required tools..."
	@command -v git >/dev/null 2>&1 || (echo "❌ git not found - required for work management" && exit 1)
	@echo "✅ git found: $$(git --version)"
	@echo ""
	@echo "📁 Checking repository status..."
	@git rev-parse --git-dir >/dev/null 2>&1 || (echo "❌ Not in a git repository" && exit 1)
	@echo "✅ Git repository detected"
	@echo "   Branch: $$(git branch --show-current)"
	@echo "   Remote: $$(git remote get-url origin 2>/dev/null || echo 'none')"
	@echo ""
	@echo "🎯 System compatible with nimsforestwork!"
	@echo "   Ready for Netflix-style deployment workflow"
	@echo ""
	@echo "Next steps:"
	@echo "  make nimsforestwork-init     - Initialize work folder structure"
	@echo "  make nimsforestwork-newissue - Create a new work item interactively"
	@echo "  make nimsforestwork-lint     - Validate work items"

# Initialize work folder structure
nimsforestwork-init:
	@echo "🌲 Initializing NimsforestWork folder structure..."
	@echo "=================================================="
	@echo ""
	@echo "📁 Creating work management folders in docs/work/..."
	@mkdir -p docs/work/proposals/new docs/work/proposals/planned docs/work/proposals/active docs/work/proposals/ready docs/work/proposals/archive
	@mkdir -p docs/work/bugs/new docs/work/bugs/planned docs/work/bugs/active docs/work/bugs/pendingfeedback docs/work/bugs/ready docs/work/bugs/archive
	@mkdir -p docs/work/changerequests/new docs/work/changerequests/planned docs/work/changerequests/active docs/work/changerequests/pendingfeedback docs/work/changerequests/ready docs/work/changerequests/archive
	@mkdir -p docs/work/improvedocumentation/new docs/work/improvedocumentation/planned docs/work/improvedocumentation/active docs/work/improvedocumentation/ready docs/work/improvedocumentation/archive
	@echo "✅ Work folders created"
	@echo ""
	@echo "📝 Creating templates..."
	@NIMSFORESTWORK_DIR=$$(find . -name "MAKEFILE.nimsforestwork" -exec dirname {} \; | head -1); \
	if [ ! -f docs/work/proposals/template.md ]; then \
		cp $$NIMSFORESTWORK_DIR/templates/proposal.md docs/work/proposals/template.md; \
		echo "✅ Proposal template created"; \
	else \
		echo "ℹ️  Proposal template already exists"; \
	fi
	@NIMSFORESTWORK_DIR=$$(find . -name "MAKEFILE.nimsforestwork" -exec dirname {} \; | head -1); \
	if [ ! -f docs/work/bugs/template.md ]; then \
		cp $$NIMSFORESTWORK_DIR/templates/bug.md docs/work/bugs/template.md; \
		echo "✅ Bug template created"; \
	else \
		echo "ℹ️  Bug template already exists"; \
	fi
	@NIMSFORESTWORK_DIR=$$(find . -name "MAKEFILE.nimsforestwork" -exec dirname {} \; | head -1); \
	if [ ! -f docs/work/changerequests/template.md ]; then \
		cp $$NIMSFORESTWORK_DIR/templates/changerequest.md docs/work/changerequests/template.md; \
		echo "✅ Change request template created"; \
	else \
		echo "ℹ️  Change request template already exists"; \
	fi
	@NIMSFORESTWORK_DIR=$$(find . -name "MAKEFILE.nimsforestwork" -exec dirname {} \; | head -1); \
	if [ ! -f docs/work/improvedocumentation/template.md ]; then \
		cp $$NIMSFORESTWORK_DIR/templates/improvedocumentation.md docs/work/improvedocumentation/template.md; \
		echo "✅ Documentation template created"; \
	else \
		echo "ℹ️  Documentation template already exists"; \
	fi
	@echo ""
	@echo "📖 Creating README..."
	@NIMSFORESTWORK_DIR=$$(find . -name "MAKEFILE.nimsforestwork" -exec dirname {} \; | head -1); \
	if [ ! -f docs/work/README.md ]; then \
		cp $$NIMSFORESTWORK_DIR/README.md docs/work/README.md; \
		echo "✅ README.md created"; \
	else \
		echo "ℹ️  README.md already exists"; \
	fi
	@echo ""
	@echo "🎉 NimsforestWork initialization complete!"
	@echo ""
	@echo "📖 Work items now visible in docs visualizer!"
	@echo ""
	@echo "Usage:"
	@echo "  1. Create work items in docs/work/{type}/new/"
	@echo "  2. Move through workflow states as you progress"
	@echo "  3. Every merge to main goes to production (Netflix model)"
	@echo "  4. Browse work items through docs visualizer"
	@echo ""
	@echo "Next: make nimsforestwork-newissue"

# Create a new work item interactively
nimsforestwork-newissue:
	@echo "🌲 Create New Work Item"
	@echo "======================="
	@echo ""
	@if [ ! -d docs/work ]; then \
		echo "❌ docs/work/ folder not found. Run 'make nimsforestwork-init' first"; \
		exit 1; \
	fi
	@echo "Work item types:"
	@echo "  1) changerequest     - Modify existing functionality"
	@echo "  2) bug               - Report and fix bugs"
	@echo "  3) proposal          - Propose new features"
	@echo "  4) improvedocumentation - Improve documentation"
	@echo ""
	@read -p "Select type (1-4): " choice; \
	case $$choice in \
		1) TYPE="changerequests" ;; \
		2) TYPE="bugs" ;; \
		3) TYPE="proposals" ;; \
		4) TYPE="improvedocumentation" ;; \
		*) echo "❌ Invalid choice"; exit 1 ;; \
	esac; \
	echo ""; \
	read -p "Enter title (will be formatted for filename): " title; \
	if [ -z "$$title" ]; then \
		echo "❌ Title cannot be empty"; \
		exit 1; \
	fi; \
	filename=$$(echo "$$title" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]//g'); \
	if [ -f "docs/work/$$TYPE/new/$$filename.md" ]; then \
		echo "❌ File docs/work/$$TYPE/new/$$filename.md already exists"; \
		exit 1; \
	fi; \
	echo ""; \
	echo "Enter description (press Ctrl+D when done):"; \
	description=$$(cat); \
	echo ""; \
	echo "Creating work item: docs/work/$$TYPE/new/$$filename.md"; \
	cp "docs/work/$$TYPE/template.md" "docs/work/$$TYPE/new/$$filename.md"; \
	if [ "$$TYPE" = "changerequests" ]; then \
		sed -i "s/# Change Request Template/# $$title/" "docs/work/$$TYPE/new/$$filename.md"; \
		sed -i "s/Brief description of the requested change/$$description/" "docs/work/$$TYPE/new/$$filename.md"; \
	elif [ "$$TYPE" = "bugs" ]; then \
		sed -i "s/# Bug Report Template/# $$title/" "docs/work/$$TYPE/new/$$filename.md"; \
		sed -i "s/Brief description of the bug/$$description/" "docs/work/$$TYPE/new/$$filename.md"; \
	elif [ "$$TYPE" = "proposals" ]; then \
		sed -i "s/# Proposal Template/# $$title/" "docs/work/$$TYPE/new/$$filename.md"; \
		sed -i "s/Brief, descriptive title/$$title/" "docs/work/$$TYPE/new/$$filename.md"; \
	elif [ "$$TYPE" = "improvedocumentation" ]; then \
		sed -i "s/# Documentation Improvement Template/# $$title/" "docs/work/$$TYPE/new/$$filename.md"; \
		sed -i "s/What documentation needs improvement?/$$description/" "docs/work/$$TYPE/new/$$filename.md"; \
	fi; \
	echo "✅ Work item created successfully!"; \
	echo ""; \
	echo "📝 Edit the file to complete the details:"; \
	echo "   docs/work/$$TYPE/new/$$filename.md"; \
	echo ""; \
	echo "📦 Commit when ready:"; \
	echo "   git add docs/work/$$TYPE/new/$$filename.md"; \
	echo "   git commit -m \"work: $$title\""; \
	echo ""; \
	echo "🎯 Next: Edit the file and commit to repository"

# Validate all work items
nimsforestwork-lint:
	@echo "🌲 NimsforestWork Validation"
	@echo "============================"
	@echo ""
	@echo "🔍 Checking work folder structure..."
	@if [ ! -d docs/work ]; then \
		echo "❌ docs/work/ folder not found. Run 'make nimsforestwork-init' first"; \
		exit 1; \
	fi
	@echo "✅ Work folder structure valid"
	@echo ""
	@echo "📝 Validating work items..."
	@find docs/work -name '*.md' ! -name 'template.md' ! -name 'README.md' -exec sh -c 'echo "Validating: $$1"; head -1 "$$1" | grep -q "^#" || (echo "❌ File $$1 should start with markdown title"; exit 1)' _ {} \; && echo "✅ All work items valid"
	@echo ""
	@echo "📊 Work item summary:"
	@echo "   Proposals: $$(find docs/work/proposals -name '*.md' ! -name 'template.md' 2>/dev/null | wc -l || echo 0)"
	@echo "   Bugs: $$(find docs/work/bugs -name '*.md' ! -name 'template.md' 2>/dev/null | wc -l || echo 0)"
	@echo "   Change Requests: $$(find docs/work/changerequests -name '*.md' ! -name 'template.md' 2>/dev/null | wc -l || echo 0)"
	@echo "   Documentation: $$(find docs/work/improvedocumentation -name '*.md' ! -name 'template.md' 2>/dev/null | wc -l || echo 0)"
	@echo ""
	@echo "📖 Browse work items in docs visualizer at docs/work/"
	@echo ""
	@echo "✅ NimsforestWork validation complete!"

# Add this Makefile to the main project Makefile
nimsforestwork-addtomainmakefile:
	@echo "🌲 Adding NimsforestWork to main Makefile..."
	@echo "============================================="
	@echo ""
	@if [ -z "$(PROJECTDIR)" ]; then \
		echo "❌ PROJECTDIR environment variable not set"; \
		echo "Usage: make nimsforestwork-addtomainmakefile PROJECTDIR=/path/to/project"; \
		exit 1; \
	fi
	@if [ ! -f "$(PROJECTDIR)/Makefile" ]; then \
		echo "❌ Makefile not found at $(PROJECTDIR)/Makefile"; \
		exit 1; \
	fi
	@echo "📁 Project directory: $(PROJECTDIR)"
	@echo "📝 Checking if already included..."
	@if grep -q "pkg/nimsforestwork/MAKEFILE.nimsforestwork" "$(PROJECTDIR)/Makefile"; then \
		echo "ℹ️  NimsforestWork already included in main Makefile"; \
	else \
		echo "" >> "$(PROJECTDIR)/Makefile"; \
		echo "# Include NimsforestWork commands" >> "$(PROJECTDIR)/Makefile"; \
		echo "-include pkg/nimsforestwork/MAKEFILE.nimsforestwork" >> "$(PROJECTDIR)/Makefile"; \
		echo "✅ Added NimsforestWork include to main Makefile"; \
	fi
	@echo ""
	@echo "🎉 NimsforestWork integration complete!"
	@echo ""
	@echo "Available commands:"
	@echo "  make nimsforestwork-hello  - Check system compatibility"
	@echo "  make nimsforestwork-init   - Initialize work structure"
	@echo "  make nimsforestwork-lint   - Validate work items"

# Remove this Makefile from the main project Makefile
nimsforestwork-removefromainmakefile:
	@echo "🌲 Removing NimsforestWork from main Makefile..."
	@echo "==============================================="
	@echo ""
	@if [ -z "$(PROJECTDIR)" ]; then \
		echo "❌ PROJECTDIR environment variable not set"; \
		echo "Usage: make nimsforestwork-removefromainmakefile PROJECTDIR=/path/to/project"; \
		exit 1; \
	fi
	@if [ ! -f "$(PROJECTDIR)/Makefile" ]; then \
		echo "❌ Makefile not found at $(PROJECTDIR)/Makefile"; \
		exit 1; \
	fi
	@echo "📁 Project directory: $(PROJECTDIR)"
	@echo "🗑️  Removing NimsforestWork includes..."
	@sed -i '/# Include NimsforestWork commands/d' "$(PROJECTDIR)/Makefile"
	@sed -i '/-include pkg\/nimsforestwork\/MAKEFILE.nimsforestwork/d' "$(PROJECTDIR)/Makefile"
	@echo "✅ Removed NimsforestWork from main Makefile"
	@echo ""
	@echo "🎉 NimsforestWork removal complete!"

# Setup workspace structure for git worktrees and agents
nimsforestwork-setup-workspace:
	@echo "🌲 Setting up NimsforestWork Workspace"
	@echo "======================================"
	@echo ""
	@# Check required environment variable
	@if [ -z "$(WORKSPACE_ROOT)" ]; then \
		echo "❌ WORKSPACE_ROOT environment variable not set"; \
		echo ""; \
		echo "Usage:"; \
		echo "  WORKSPACE_ROOT=/path/to/workspace make nimsforestwork-setup-workspace"; \
		echo ""; \
		echo "Example:"; \
		echo "  # From /home/user/myproject (current repo)"; \
		echo "  WORKSPACE_ROOT=/home/user/myproject-workspace make nimsforestwork-setup-workspace"; \
		echo ""; \
		exit 1; \
	fi
	@echo "🎯 Target workspace: $(WORKSPACE_ROOT)"
	@echo ""
	@# Detect current repository
	@if [ ! -d .git ]; then \
		echo "❌ Not in a git repository"; \
		echo "Run this command from the root of your git repository"; \
		exit 1; \
	fi
	@REPO_NAME=$$(basename "$$(pwd)"); \
	echo "📁 Current repository: $$REPO_NAME"; \
	echo ""
	@# Create workspace structure
	@REPO_NAME=$$(basename "$$(pwd)"); \
	WORKSPACE_DIR="$(WORKSPACE_ROOT)"; \
	echo "📦 Creating workspace structure..."; \
	mkdir -p "$$WORKSPACE_DIR"; \
	echo "✅ Created workspace directory: $$WORKSPACE_DIR"; \
	echo ""
	@# Move current repo to main/
	@REPO_NAME=$$(basename "$$(pwd)"); \
	WORKSPACE_DIR="$(WORKSPACE_ROOT)"; \
	CURRENT_DIR="$$(pwd)"; \
	PARENT_DIR="$$(dirname "$$CURRENT_DIR")"; \
	echo "🔄 Moving repository to workspace..."; \
	if [ -d "$$WORKSPACE_DIR/main" ]; then \
		echo "❌ $$WORKSPACE_DIR/main already exists"; \
		exit 1; \
	fi; \
	mv "$$CURRENT_DIR" "$$WORKSPACE_DIR/main"; \
	echo "✅ Repository moved to: $$WORKSPACE_DIR/main"; \
	echo ""
	@# Copy nimsforestwork to tools/
	@WORKSPACE_DIR="$(WORKSPACE_ROOT)"; \
	echo "🔧 Setting up nimsforestwork tools..."; \
	mkdir -p "$$WORKSPACE_DIR/tools"; \
	cp -r "$$WORKSPACE_DIR/main/tools/nimsforestwork" "$$WORKSPACE_DIR/tools/" 2>/dev/null || \
	cp -r . "$$WORKSPACE_DIR/tools/nimsforestwork"; \
	echo "✅ NimsforestWork tools available at: $$WORKSPACE_DIR/tools/nimsforestwork"; \
	echo ""
	@# Initialize work structure
	@WORKSPACE_DIR="$(WORKSPACE_ROOT)"; \
	echo "📝 Initializing work management..."; \
	cd "$$WORKSPACE_DIR" && \
	mkdir -p work/proposals/new work/proposals/planned work/proposals/active work/proposals/ready work/proposals/archive && \
	mkdir -p work/bugs/new work/bugs/planned work/bugs/active work/bugs/pendingfeedback work/bugs/ready work/bugs/archive && \
	mkdir -p work/changerequests/new work/changerequests/planned work/changerequests/active work/changerequests/pendingfeedback work/changerequests/ready work/changerequests/archive && \
	mkdir -p work/improvedocumentation/new work/improvedocumentation/planned work/improvedocumentation/active work/improvedocumentation/ready work/improvedocumentation/archive; \
	echo "✅ Work folders created"; \
	echo ""
	@# Copy templates
	@WORKSPACE_DIR="$(WORKSPACE_ROOT)"; \
	echo "📄 Setting up templates..."; \
	cd "$$WORKSPACE_DIR" && \
	cp tools/nimsforestwork/templates/proposal.md work/proposals/template.md && \
	cp tools/nimsforestwork/templates/bug.md work/bugs/template.md && \
	cp tools/nimsforestwork/templates/changerequest.md work/changerequests/template.md && \
	cp tools/nimsforestwork/templates/improvedocumentation.md work/improvedocumentation/template.md; \
	echo "✅ Templates ready"; \
	echo ""
	@# Create workspace-specific agent instructions
	@WORKSPACE_DIR="$(WORKSPACE_ROOT)"; \
	REPO_NAME=$$(basename "$$WORKSPACE_DIR" | sed 's/-workspace$$//'); \
	echo "🤖 Creating agent instructions..."; \
	cd "$$WORKSPACE_DIR" && \
	sed "s|docs/work/|work/|g" tools/nimsforestwork/AGENTINSTRUCTIONS.md > AGENTINSTRUCTIONS.md && \
	echo "" >> AGENTINSTRUCTIONS.md && \
	echo "## Workspace-Specific Instructions" >> AGENTINSTRUCTIONS.md && \
	echo "" >> AGENTINSTRUCTIONS.md && \
	echo "This is a **$$REPO_NAME workspace** with git worktree support:" >> AGENTINSTRUCTIONS.md && \
	echo "" >> AGENTINSTRUCTIONS.md && \
	echo "- **main/**: Primary development branch" >> AGENTINSTRUCTIONS.md && \
	echo "- **work/**: Work management (use instead of docs/work/)" >> AGENTINSTRUCTIONS.md && \
	echo "- **Git worktrees**: Create with \`cd main && git worktree add ../feature-branch\`" >> AGENTINSTRUCTIONS.md && \
	echo "" >> AGENTINSTRUCTIONS.md && \
	echo "Available workspace commands:" >> AGENTINSTRUCTIONS.md && \
	echo "- \`make -f tools/nimsforestwork/MAKEFILE.nimsforestwork workspace-hello\`" >> AGENTINSTRUCTIONS.md && \
	echo "- \`make -f tools/nimsforestwork/MAKEFILE.nimsforestwork workspace-newissue\`" >> AGENTINSTRUCTIONS.md && \
	echo "- \`make -f tools/nimsforestwork/MAKEFILE.nimsforestwork workspace-lint\`" >> AGENTINSTRUCTIONS.md; \
	echo "✅ Agent instructions created: AGENTINSTRUCTIONS.md"; \
	echo ""
	@# Create workspace Makefile
	@WORKSPACE_DIR="$(WORKSPACE_ROOT)"; \
	echo "⚙️  Creating workspace Makefile..."; \
	cd "$$WORKSPACE_DIR" && \
	echo "# Workspace Makefile for nimsforestwork" > Makefile && \
	echo "# Include nimsforestwork with workspace-friendly targets" >> Makefile && \
	echo "" >> Makefile && \
	echo "-include tools/nimsforestwork/MAKEFILE.nimsforestwork" >> Makefile && \
	echo "" >> Makefile && \
	echo "# Workspace-friendly aliases" >> Makefile && \
	echo "workspace-hello: nimsforestwork-hello" >> Makefile && \
	echo "workspace-newissue:" >> Makefile && \
	echo "	@cd main && make -f ../tools/nimsforestwork/MAKEFILE.nimsforestwork nimsforestwork-newissue" >> Makefile && \
	echo "workspace-lint:" >> Makefile && \
	echo "	@cd main && make -f ../tools/nimsforestwork/MAKEFILE.nimsforestwork nimsforestwork-lint" >> Makefile; \
	echo "✅ Workspace Makefile created"; \
	echo ""
	@# Final success message
	@WORKSPACE_DIR="$(WORKSPACE_ROOT)"; \
	REPO_NAME=$$(basename "$$WORKSPACE_DIR" | sed 's/-workspace$$//'); \
	echo "🎉 Workspace setup complete!"; \
	echo ""; \
	echo "📍 Your new workspace structure:"; \
	echo "   $$WORKSPACE_DIR/"; \
	echo "   ├── main/                    # Your $$REPO_NAME repository"; \
	echo "   ├── tools/nimsforestwork/    # Work management tools"; \
	echo "   ├── work/                    # Work items and templates"; \
	echo "   ├── AGENTINSTRUCTIONS.md     # Instructions for AI agents"; \
	echo "   └── Makefile                 # Workspace commands"; \
	echo ""; \
	echo "🚀 Next steps:"; \
	echo "   cd $$WORKSPACE_DIR"; \
	echo "   make workspace-hello         # Test the setup"; \
	echo "   make workspace-newissue      # Create your first work item"; \
	echo ""; \
	echo "🌳 Git worktree ready:"; \
	echo "   cd $$WORKSPACE_DIR/main"; \
	echo "   git worktree add ../feature-branch origin/feature-branch"; \
	echo "   cd ../feature-branch         # Work in isolated branch"; \
	echo ""; \
	echo "🤖 Tell your AI agent:"; \
	echo "   'Read AGENTINSTRUCTIONS.md and follow those instructions'"; \
	echo ""